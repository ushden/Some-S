import {Injectable} from "@nestjs/common";
import {DateTime} from "luxon";

import {Event} from "../../../event/entities/event.entity";
import {StatusMapping} from "@enums";

export interface ITelegramUtilsService {}

@Injectable()
export class TelegramUtilsService implements ITelegramUtilsService {
	public static getEventIdFromActionData(data: string): number | null {
		if (data) {
			return null;
		}
		
		const parts = data.split('-');
		const eventId = Number(parts[parts.length - 1]);
		
		return eventId || null;
	}
	
	public static generateHtmlEvent(event: Event): string {
		const services = event.services.map(({name}, i) => `\n<i>üàØ${name}</i>`).join('');
		const time = `<b>${DateTime.fromMillis(+event.start).toFormat('HH:mm')} - ${DateTime.fromMillis(+event.end).toFormat('HH:mm')}</b>`;
		const customer = `<b>${event.customer.name} - ${event.customer.phone}</b>`;
		const master = `<b>–ú–∞–π—Å—Ç–µ—Ä - ${event.master.name}</b>`;
		const price = `<i>üí≥–í–∞—Ä—Ç—ñ—Å—Ç—å</i> - <b>${event.price}</b> –≥—Ä–Ω.`;
		const leadTime = `<i>‚è≥–ü–æ—Ç—Ä—ñ–±–Ω–æ —á–∞—Å—É</i> - ${event.leadTime} —Ö–≤.`
		
		return `
			${time}\n<i>üåü–°—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Å—É - ${StatusMapping[event.status]}</i>\n\n${customer}\n${master}\n${services}\n\n${price}\n${leadTime}
			\n\n
			–¢—É—Ç –Ω—É–∂–Ω–æ –ø–æ–¥—É–º–∞—Ç—å –∫–∞–∫ –∫—Ä–∞—Å–∏–≤–æ —Å–¥–µ–ª–∞—Ç—å
		`;
	}
}